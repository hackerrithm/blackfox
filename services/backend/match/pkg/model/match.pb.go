// Code generated by protoc-gen-go. DO NOT EDIT.
// source: match.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Match struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PersonID             string               `protobuf:"bytes,2,opt,name=personID,proto3" json:"personID,omitempty"`
	Managers             []string             `protobuf:"bytes,3,rep,name=managers,proto3" json:"managers,omitempty"`
	Details              string               `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Similarities         []string             `protobuf:"bytes,7,rep,name=similarities,proto3" json:"similarities,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{0}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Match) GetPersonID() string {
	if m != nil {
		return m.PersonID
	}
	return ""
}

func (m *Match) GetManagers() []string {
	if m != nil {
		return m.Managers
	}
	return nil
}

func (m *Match) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Match) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Match) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Match) GetSimilarities() []string {
	if m != nil {
		return m.Similarities
	}
	return nil
}

func (m *Match) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type MatchedUser struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Firstname            string   `protobuf:"bytes,4,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname             string   `protobuf:"bytes,5,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Type                 string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	EmailAddress         string   `protobuf:"bytes,8,opt,name=emailAddress,proto3" json:"emailAddress,omitempty"`
	Gender               string   `protobuf:"bytes,9,opt,name=gender,proto3" json:"gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchedUser) Reset()         { *m = MatchedUser{} }
func (m *MatchedUser) String() string { return proto.CompactTextString(m) }
func (*MatchedUser) ProtoMessage()    {}
func (*MatchedUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{1}
}

func (m *MatchedUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchedUser.Unmarshal(m, b)
}
func (m *MatchedUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchedUser.Marshal(b, m, deterministic)
}
func (m *MatchedUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchedUser.Merge(m, src)
}
func (m *MatchedUser) XXX_Size() int {
	return xxx_messageInfo_MatchedUser.Size(m)
}
func (m *MatchedUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchedUser.DiscardUnknown(m)
}

var xxx_messageInfo_MatchedUser proto.InternalMessageInfo

func (m *MatchedUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MatchedUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MatchedUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *MatchedUser) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *MatchedUser) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *MatchedUser) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MatchedUser) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MatchedUser) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *MatchedUser) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

type PostMatchRequest struct {
	PersonID             string               `protobuf:"bytes,1,opt,name=personID,proto3" json:"personID,omitempty"`
	Managers             []string             `protobuf:"bytes,2,rep,name=managers,proto3" json:"managers,omitempty"`
	Details              string               `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Similarities         []string             `protobuf:"bytes,6,rep,name=similarities,proto3" json:"similarities,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PostMatchRequest) Reset()         { *m = PostMatchRequest{} }
func (m *PostMatchRequest) String() string { return proto.CompactTextString(m) }
func (*PostMatchRequest) ProtoMessage()    {}
func (*PostMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{2}
}

func (m *PostMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostMatchRequest.Unmarshal(m, b)
}
func (m *PostMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostMatchRequest.Marshal(b, m, deterministic)
}
func (m *PostMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostMatchRequest.Merge(m, src)
}
func (m *PostMatchRequest) XXX_Size() int {
	return xxx_messageInfo_PostMatchRequest.Size(m)
}
func (m *PostMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostMatchRequest proto.InternalMessageInfo

func (m *PostMatchRequest) GetPersonID() string {
	if m != nil {
		return m.PersonID
	}
	return ""
}

func (m *PostMatchRequest) GetManagers() []string {
	if m != nil {
		return m.Managers
	}
	return nil
}

func (m *PostMatchRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *PostMatchRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PostMatchRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PostMatchRequest) GetSimilarities() []string {
	if m != nil {
		return m.Similarities
	}
	return nil
}

func (m *PostMatchRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PostMatchResponse struct {
	Match                string   `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostMatchResponse) Reset()         { *m = PostMatchResponse{} }
func (m *PostMatchResponse) String() string { return proto.CompactTextString(m) }
func (*PostMatchResponse) ProtoMessage()    {}
func (*PostMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{3}
}

func (m *PostMatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostMatchResponse.Unmarshal(m, b)
}
func (m *PostMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostMatchResponse.Marshal(b, m, deterministic)
}
func (m *PostMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostMatchResponse.Merge(m, src)
}
func (m *PostMatchResponse) XXX_Size() int {
	return xxx_messageInfo_PostMatchResponse.Size(m)
}
func (m *PostMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostMatchResponse proto.InternalMessageInfo

func (m *PostMatchResponse) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

type GetMatchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID               uint64   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMatchRequest) Reset()         { *m = GetMatchRequest{} }
func (m *GetMatchRequest) String() string { return proto.CompactTextString(m) }
func (*GetMatchRequest) ProtoMessage()    {}
func (*GetMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{4}
}

func (m *GetMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMatchRequest.Unmarshal(m, b)
}
func (m *GetMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMatchRequest.Marshal(b, m, deterministic)
}
func (m *GetMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMatchRequest.Merge(m, src)
}
func (m *GetMatchRequest) XXX_Size() int {
	return xxx_messageInfo_GetMatchRequest.Size(m)
}
func (m *GetMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMatchRequest proto.InternalMessageInfo

func (m *GetMatchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetMatchRequest) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type GetMatchResponse struct {
	Match                *Match   `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMatchResponse) Reset()         { *m = GetMatchResponse{} }
func (m *GetMatchResponse) String() string { return proto.CompactTextString(m) }
func (*GetMatchResponse) ProtoMessage()    {}
func (*GetMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{5}
}

func (m *GetMatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMatchResponse.Unmarshal(m, b)
}
func (m *GetMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMatchResponse.Marshal(b, m, deterministic)
}
func (m *GetMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMatchResponse.Merge(m, src)
}
func (m *GetMatchResponse) XXX_Size() int {
	return xxx_messageInfo_GetMatchResponse.Size(m)
}
func (m *GetMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMatchResponse proto.InternalMessageInfo

func (m *GetMatchResponse) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

type GetMultipleMatchesRequest struct {
	Similarities         []string `protobuf:"bytes,1,rep,name=similarities,proto3" json:"similarities,omitempty"`
	Skip                 uint64   `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	Take                 uint64   `protobuf:"varint,3,opt,name=take,proto3" json:"take,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMultipleMatchesRequest) Reset()         { *m = GetMultipleMatchesRequest{} }
func (m *GetMultipleMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*GetMultipleMatchesRequest) ProtoMessage()    {}
func (*GetMultipleMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{6}
}

func (m *GetMultipleMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultipleMatchesRequest.Unmarshal(m, b)
}
func (m *GetMultipleMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultipleMatchesRequest.Marshal(b, m, deterministic)
}
func (m *GetMultipleMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultipleMatchesRequest.Merge(m, src)
}
func (m *GetMultipleMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_GetMultipleMatchesRequest.Size(m)
}
func (m *GetMultipleMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultipleMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultipleMatchesRequest proto.InternalMessageInfo

func (m *GetMultipleMatchesRequest) GetSimilarities() []string {
	if m != nil {
		return m.Similarities
	}
	return nil
}

func (m *GetMultipleMatchesRequest) GetSkip() uint64 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *GetMultipleMatchesRequest) GetTake() uint64 {
	if m != nil {
		return m.Take
	}
	return 0
}

type GetMultipleMatchesResponse struct {
	Matches              []*MatchedUser `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetMultipleMatchesResponse) Reset()         { *m = GetMultipleMatchesResponse{} }
func (m *GetMultipleMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*GetMultipleMatchesResponse) ProtoMessage()    {}
func (*GetMultipleMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{7}
}

func (m *GetMultipleMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultipleMatchesResponse.Unmarshal(m, b)
}
func (m *GetMultipleMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultipleMatchesResponse.Marshal(b, m, deterministic)
}
func (m *GetMultipleMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultipleMatchesResponse.Merge(m, src)
}
func (m *GetMultipleMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_GetMultipleMatchesResponse.Size(m)
}
func (m *GetMultipleMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultipleMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultipleMatchesResponse proto.InternalMessageInfo

func (m *GetMultipleMatchesResponse) GetMatches() []*MatchedUser {
	if m != nil {
		return m.Matches
	}
	return nil
}

type PutMatchRequest struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PersonID             string               `protobuf:"bytes,2,opt,name=personID,proto3" json:"personID,omitempty"`
	Managers             []string             `protobuf:"bytes,3,rep,name=managers,proto3" json:"managers,omitempty"`
	Details              string               `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Similarities         []string             `protobuf:"bytes,7,rep,name=similarities,proto3" json:"similarities,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PutMatchRequest) Reset()         { *m = PutMatchRequest{} }
func (m *PutMatchRequest) String() string { return proto.CompactTextString(m) }
func (*PutMatchRequest) ProtoMessage()    {}
func (*PutMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{8}
}

func (m *PutMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutMatchRequest.Unmarshal(m, b)
}
func (m *PutMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutMatchRequest.Marshal(b, m, deterministic)
}
func (m *PutMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutMatchRequest.Merge(m, src)
}
func (m *PutMatchRequest) XXX_Size() int {
	return xxx_messageInfo_PutMatchRequest.Size(m)
}
func (m *PutMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutMatchRequest proto.InternalMessageInfo

func (m *PutMatchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutMatchRequest) GetPersonID() string {
	if m != nil {
		return m.PersonID
	}
	return ""
}

func (m *PutMatchRequest) GetManagers() []string {
	if m != nil {
		return m.Managers
	}
	return nil
}

func (m *PutMatchRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *PutMatchRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PutMatchRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PutMatchRequest) GetSimilarities() []string {
	if m != nil {
		return m.Similarities
	}
	return nil
}

func (m *PutMatchRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PutMatchResponse struct {
	Match                string   `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutMatchResponse) Reset()         { *m = PutMatchResponse{} }
func (m *PutMatchResponse) String() string { return proto.CompactTextString(m) }
func (*PutMatchResponse) ProtoMessage()    {}
func (*PutMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{9}
}

func (m *PutMatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutMatchResponse.Unmarshal(m, b)
}
func (m *PutMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutMatchResponse.Marshal(b, m, deterministic)
}
func (m *PutMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutMatchResponse.Merge(m, src)
}
func (m *PutMatchResponse) XXX_Size() int {
	return xxx_messageInfo_PutMatchResponse.Size(m)
}
func (m *PutMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutMatchResponse proto.InternalMessageInfo

func (m *PutMatchResponse) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

type DeleteMatchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMatchRequest) Reset()         { *m = DeleteMatchRequest{} }
func (m *DeleteMatchRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMatchRequest) ProtoMessage()    {}
func (*DeleteMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{10}
}

func (m *DeleteMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMatchRequest.Unmarshal(m, b)
}
func (m *DeleteMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMatchRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMatchRequest.Merge(m, src)
}
func (m *DeleteMatchRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMatchRequest.Size(m)
}
func (m *DeleteMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMatchRequest proto.InternalMessageInfo

func (m *DeleteMatchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteMatchResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMatchResponse) Reset()         { *m = DeleteMatchResponse{} }
func (m *DeleteMatchResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteMatchResponse) ProtoMessage()    {}
func (*DeleteMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a39bbc00e119b00, []int{11}
}

func (m *DeleteMatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMatchResponse.Unmarshal(m, b)
}
func (m *DeleteMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMatchResponse.Marshal(b, m, deterministic)
}
func (m *DeleteMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMatchResponse.Merge(m, src)
}
func (m *DeleteMatchResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteMatchResponse.Size(m)
}
func (m *DeleteMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMatchResponse proto.InternalMessageInfo

func (m *DeleteMatchResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Match)(nil), "pb.Match")
	proto.RegisterType((*MatchedUser)(nil), "pb.MatchedUser")
	proto.RegisterType((*PostMatchRequest)(nil), "pb.PostMatchRequest")
	proto.RegisterType((*PostMatchResponse)(nil), "pb.PostMatchResponse")
	proto.RegisterType((*GetMatchRequest)(nil), "pb.GetMatchRequest")
	proto.RegisterType((*GetMatchResponse)(nil), "pb.GetMatchResponse")
	proto.RegisterType((*GetMultipleMatchesRequest)(nil), "pb.GetMultipleMatchesRequest")
	proto.RegisterType((*GetMultipleMatchesResponse)(nil), "pb.GetMultipleMatchesResponse")
	proto.RegisterType((*PutMatchRequest)(nil), "pb.PutMatchRequest")
	proto.RegisterType((*PutMatchResponse)(nil), "pb.PutMatchResponse")
	proto.RegisterType((*DeleteMatchRequest)(nil), "pb.DeleteMatchRequest")
	proto.RegisterType((*DeleteMatchResponse)(nil), "pb.DeleteMatchResponse")
}

func init() { proto.RegisterFile("match.proto", fileDescriptor_4a39bbc00e119b00) }

var fileDescriptor_4a39bbc00e119b00 = []byte{
	// 622 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x1d, 0x27, 0xa9, 0xc7, 0x15, 0x2d, 0xdb, 0x52, 0x8c, 0x05, 0x34, 0x5a, 0x81, 0xd4,
	0x5e, 0x5c, 0x29, 0x3d, 0x20, 0x38, 0x81, 0x54, 0xa9, 0xe2, 0x80, 0x54, 0x19, 0xfa, 0x03, 0x9c,
	0x7a, 0x1a, 0x56, 0xf5, 0x17, 0xde, 0x35, 0x12, 0x3f, 0x94, 0xbf, 0x01, 0x07, 0xce, 0x48, 0x68,
	0x3f, 0xec, 0xda, 0x4e, 0x1a, 0x38, 0x73, 0xf3, 0xbc, 0x99, 0xdd, 0x99, 0xf7, 0xde, 0xac, 0xc1,
	0xcb, 0x62, 0x71, 0xfd, 0x39, 0x2c, 0xab, 0x42, 0x14, 0xc4, 0x2e, 0x17, 0xc1, 0xd1, 0xb2, 0x28,
	0x96, 0x29, 0x9e, 0x2a, 0x64, 0x51, 0xdf, 0x9c, 0x0a, 0x96, 0x21, 0x17, 0x71, 0x56, 0xea, 0x22,
	0xfa, 0xcb, 0x82, 0xf1, 0x07, 0x79, 0x88, 0x3c, 0x00, 0x9b, 0x25, 0xbe, 0x35, 0xb3, 0x8e, 0xdd,
	0xc8, 0x66, 0x09, 0x09, 0x60, 0xbb, 0xc4, 0x8a, 0x17, 0xf9, 0xfb, 0x73, 0xdf, 0x56, 0x68, 0x1b,
	0xcb, 0x5c, 0x16, 0xe7, 0xf1, 0x12, 0x2b, 0xee, 0x8f, 0x66, 0x23, 0x99, 0x6b, 0x62, 0xe2, 0xc3,
	0x34, 0x41, 0x11, 0xb3, 0x94, 0xfb, 0x8e, 0x3a, 0xd6, 0x84, 0x84, 0x80, 0x23, 0xbe, 0x95, 0xe8,
	0x8f, 0x15, 0xac, 0xbe, 0xc9, 0x0c, 0xbc, 0x04, 0xf9, 0x75, 0xc5, 0x4a, 0xc1, 0x8a, 0xdc, 0x9f,
	0xa8, 0x54, 0x17, 0x22, 0x14, 0x76, 0x38, 0xcb, 0x58, 0x1a, 0x57, 0x4c, 0x30, 0xe4, 0xfe, 0x54,
	0xf5, 0xeb, 0x61, 0x24, 0x04, 0x47, 0x12, 0xf3, 0xb7, 0x67, 0xd6, 0xb1, 0x37, 0x0f, 0x42, 0xcd,
	0x3a, 0x6c, 0x58, 0x87, 0x9f, 0x1a, 0xd6, 0x91, 0xaa, 0xa3, 0x3f, 0x2d, 0xf0, 0x14, 0x6b, 0x4c,
	0xae, 0x38, 0x56, 0x2b, 0xdc, 0x09, 0x38, 0x79, 0x9c, 0xa1, 0xe1, 0xad, 0xbe, 0x25, 0xe7, 0x9a,
	0x63, 0xa5, 0xf0, 0x91, 0xd6, 0xa3, 0x89, 0xc9, 0x53, 0x70, 0x6f, 0x58, 0xc5, 0x85, 0x4a, 0x6a,
	0xd6, 0x77, 0x80, 0x3c, 0x99, 0xc6, 0x26, 0xa9, 0xb9, 0xb7, 0x31, 0x39, 0x84, 0x09, 0x17, 0xb1,
	0xa8, 0xb9, 0xa1, 0x6e, 0xa2, 0x56, 0xab, 0x69, 0x47, 0x2b, 0x0a, 0x3b, 0x98, 0xc5, 0x2c, 0x7d,
	0x97, 0x24, 0x15, 0x72, 0xae, 0xd8, 0xba, 0x51, 0x0f, 0x93, 0xf7, 0x2d, 0x31, 0x4f, 0xb0, 0xf2,
	0x5d, 0x7d, 0x9f, 0x8e, 0xe8, 0x0f, 0x0b, 0xf6, 0x2e, 0x0b, 0x2e, 0x14, 0xeb, 0x08, 0xbf, 0xd4,
	0xc8, 0x45, 0xcf, 0x62, 0x6b, 0x83, 0xc5, 0xf6, 0xfd, 0x16, 0x8f, 0xd6, 0x5b, 0xec, 0xdc, 0x6f,
	0xf1, 0xf8, 0xef, 0x16, 0x4f, 0x36, 0x58, 0x3c, 0xfd, 0x47, 0x8b, 0x4f, 0xe0, 0x61, 0x87, 0x2f,
	0x2f, 0x8b, 0x9c, 0x23, 0x39, 0x80, 0xb1, 0x7a, 0x21, 0x86, 0xad, 0x0e, 0xe8, 0x6b, 0xd8, 0xbd,
	0xc0, 0xbe, 0x32, 0xc3, 0x85, 0x38, 0x84, 0x89, 0x34, 0xdb, 0x3c, 0x05, 0x27, 0x32, 0x11, 0x3d,
	0x83, 0xbd, 0xbb, 0xa3, 0xa6, 0xc9, 0x51, 0xb7, 0x89, 0x37, 0x77, 0xc3, 0x72, 0x11, 0xea, 0x0a,
	0xd3, 0x6f, 0x09, 0x4f, 0xe4, 0xa1, 0x3a, 0x15, 0xac, 0x4c, 0x51, 0xef, 0x21, 0x6f, 0x3a, 0x0f,
	0xb5, 0xb0, 0xd6, 0x68, 0x41, 0xc0, 0xe1, 0xb7, 0xac, 0x34, 0xb3, 0xa8, 0x6f, 0xa5, 0x7c, 0x7c,
	0xab, 0x57, 0xd3, 0x89, 0xd4, 0x37, 0xbd, 0x80, 0x60, 0x5d, 0x23, 0x33, 0xe7, 0x09, 0x4c, 0x33,
	0x0d, 0xa9, 0x26, 0xde, 0x7c, 0xb7, 0x9d, 0x54, 0x3f, 0x8b, 0xa8, 0xc9, 0xd3, 0xdf, 0x16, 0xec,
	0x5e, 0xd6, 0x9b, 0x25, 0xfa, 0x9f, 0xff, 0x17, 0xc7, 0xb0, 0x77, 0x47, 0x7f, 0xe3, 0x2e, 0xbd,
	0x00, 0x72, 0x8e, 0x29, 0x0a, 0xdc, 0xa4, 0x15, 0x7d, 0x09, 0xfb, 0xbd, 0x2a, 0x73, 0xe5, 0xa0,
	0x6c, 0xfe, 0xdd, 0x86, 0x1d, 0x55, 0xf1, 0x11, 0xab, 0xaf, 0xec, 0x1a, 0xc9, 0x1b, 0x70, 0xdb,
	0xa5, 0x26, 0x07, 0xd2, 0xae, 0xe1, 0x9b, 0x0e, 0x1e, 0x0d, 0x50, 0x7d, 0x35, 0xdd, 0x22, 0xaf,
	0x60, 0xbb, 0x59, 0x55, 0xb2, 0x2f, 0x8b, 0x06, 0x3b, 0x1f, 0x1c, 0xf4, 0xc1, 0xf6, 0xe0, 0x15,
	0x90, 0xd5, 0x2d, 0x22, 0xcf, 0x9a, 0xea, 0xb5, 0x6b, 0x1c, 0x3c, 0xbf, 0x2f, 0xdd, 0x9d, 0xa7,
	0xd1, 0x54, 0xcf, 0x33, 0x58, 0x30, 0x3d, 0xcf, 0x50, 0x76, 0xba, 0x45, 0xde, 0x82, 0xd7, 0x11,
	0x8f, 0x1c, 0xca, 0xb2, 0x55, 0xcd, 0x83, 0xc7, 0x2b, 0x78, 0x73, 0xc3, 0x62, 0xa2, 0x8c, 0x3e,
	0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x90, 0x6c, 0x72, 0x2f, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MatchServiceClient is the client API for MatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatchServiceClient interface {
	PostMatch(ctx context.Context, in *PostMatchRequest, opts ...grpc.CallOption) (*PostMatchResponse, error)
	GetMatch(ctx context.Context, in *GetMatchRequest, opts ...grpc.CallOption) (*GetMatchResponse, error)
	GetMultipleMatches(ctx context.Context, in *GetMultipleMatchesRequest, opts ...grpc.CallOption) (*GetMultipleMatchesResponse, error)
	PutMatch(ctx context.Context, in *PutMatchRequest, opts ...grpc.CallOption) (*PutMatchResponse, error)
	DeleteMatch(ctx context.Context, in *DeleteMatchRequest, opts ...grpc.CallOption) (*DeleteMatchResponse, error)
}

type matchServiceClient struct {
	cc *grpc.ClientConn
}

func NewMatchServiceClient(cc *grpc.ClientConn) MatchServiceClient {
	return &matchServiceClient{cc}
}

func (c *matchServiceClient) PostMatch(ctx context.Context, in *PostMatchRequest, opts ...grpc.CallOption) (*PostMatchResponse, error) {
	out := new(PostMatchResponse)
	err := c.cc.Invoke(ctx, "/pb.MatchService/PostMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matchServiceClient) GetMatch(ctx context.Context, in *GetMatchRequest, opts ...grpc.CallOption) (*GetMatchResponse, error) {
	out := new(GetMatchResponse)
	err := c.cc.Invoke(ctx, "/pb.MatchService/GetMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matchServiceClient) GetMultipleMatches(ctx context.Context, in *GetMultipleMatchesRequest, opts ...grpc.CallOption) (*GetMultipleMatchesResponse, error) {
	out := new(GetMultipleMatchesResponse)
	err := c.cc.Invoke(ctx, "/pb.MatchService/GetMultipleMatches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matchServiceClient) PutMatch(ctx context.Context, in *PutMatchRequest, opts ...grpc.CallOption) (*PutMatchResponse, error) {
	out := new(PutMatchResponse)
	err := c.cc.Invoke(ctx, "/pb.MatchService/PutMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matchServiceClient) DeleteMatch(ctx context.Context, in *DeleteMatchRequest, opts ...grpc.CallOption) (*DeleteMatchResponse, error) {
	out := new(DeleteMatchResponse)
	err := c.cc.Invoke(ctx, "/pb.MatchService/DeleteMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatchServiceServer is the server API for MatchService service.
type MatchServiceServer interface {
	PostMatch(context.Context, *PostMatchRequest) (*PostMatchResponse, error)
	GetMatch(context.Context, *GetMatchRequest) (*GetMatchResponse, error)
	GetMultipleMatches(context.Context, *GetMultipleMatchesRequest) (*GetMultipleMatchesResponse, error)
	PutMatch(context.Context, *PutMatchRequest) (*PutMatchResponse, error)
	DeleteMatch(context.Context, *DeleteMatchRequest) (*DeleteMatchResponse, error)
}

// UnimplementedMatchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMatchServiceServer struct {
}

func (*UnimplementedMatchServiceServer) PostMatch(ctx context.Context, req *PostMatchRequest) (*PostMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMatch not implemented")
}
func (*UnimplementedMatchServiceServer) GetMatch(ctx context.Context, req *GetMatchRequest) (*GetMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMatch not implemented")
}
func (*UnimplementedMatchServiceServer) GetMultipleMatches(ctx context.Context, req *GetMultipleMatchesRequest) (*GetMultipleMatchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipleMatches not implemented")
}
func (*UnimplementedMatchServiceServer) PutMatch(ctx context.Context, req *PutMatchRequest) (*PutMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutMatch not implemented")
}
func (*UnimplementedMatchServiceServer) DeleteMatch(ctx context.Context, req *DeleteMatchRequest) (*DeleteMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMatch not implemented")
}

func RegisterMatchServiceServer(s *grpc.Server, srv MatchServiceServer) {
	s.RegisterService(&_MatchService_serviceDesc, srv)
}

func _MatchService_PostMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchServiceServer).PostMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MatchService/PostMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchServiceServer).PostMatch(ctx, req.(*PostMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MatchService_GetMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchServiceServer).GetMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MatchService/GetMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchServiceServer).GetMatch(ctx, req.(*GetMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MatchService_GetMultipleMatches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultipleMatchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchServiceServer).GetMultipleMatches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MatchService/GetMultipleMatches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchServiceServer).GetMultipleMatches(ctx, req.(*GetMultipleMatchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MatchService_PutMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchServiceServer).PutMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MatchService/PutMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchServiceServer).PutMatch(ctx, req.(*PutMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MatchService_DeleteMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchServiceServer).DeleteMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MatchService/DeleteMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchServiceServer).DeleteMatch(ctx, req.(*DeleteMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MatchService",
	HandlerType: (*MatchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostMatch",
			Handler:    _MatchService_PostMatch_Handler,
		},
		{
			MethodName: "GetMatch",
			Handler:    _MatchService_GetMatch_Handler,
		},
		{
			MethodName: "GetMultipleMatches",
			Handler:    _MatchService_GetMultipleMatches_Handler,
		},
		{
			MethodName: "PutMatch",
			Handler:    _MatchService_PutMatch_Handler,
		},
		{
			MethodName: "DeleteMatch",
			Handler:    _MatchService_DeleteMatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "match.proto",
}
