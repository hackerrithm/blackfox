// Code generated by protoc-gen-go. DO NOT EDIT.
// source: group.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Group struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	People               []string             `protobuf:"bytes,3,rep,name=people,proto3" json:"people,omitempty"`
	Details              string               `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{0}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Group) GetPeople() []string {
	if m != nil {
		return m.People
	}
	return nil
}

func (m *Group) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Group) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Group) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Group) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PostGroupRequest struct {
	Title                string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	People               []string             `protobuf:"bytes,2,rep,name=people,proto3" json:"people,omitempty"`
	Details              string               `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PostGroupRequest) Reset()         { *m = PostGroupRequest{} }
func (m *PostGroupRequest) String() string { return proto.CompactTextString(m) }
func (*PostGroupRequest) ProtoMessage()    {}
func (*PostGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{1}
}

func (m *PostGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostGroupRequest.Unmarshal(m, b)
}
func (m *PostGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostGroupRequest.Marshal(b, m, deterministic)
}
func (m *PostGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostGroupRequest.Merge(m, src)
}
func (m *PostGroupRequest) XXX_Size() int {
	return xxx_messageInfo_PostGroupRequest.Size(m)
}
func (m *PostGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostGroupRequest proto.InternalMessageInfo

func (m *PostGroupRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PostGroupRequest) GetPeople() []string {
	if m != nil {
		return m.People
	}
	return nil
}

func (m *PostGroupRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *PostGroupRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PostGroupRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PostGroupRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PostGroupResponse struct {
	Group                string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostGroupResponse) Reset()         { *m = PostGroupResponse{} }
func (m *PostGroupResponse) String() string { return proto.CompactTextString(m) }
func (*PostGroupResponse) ProtoMessage()    {}
func (*PostGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{2}
}

func (m *PostGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostGroupResponse.Unmarshal(m, b)
}
func (m *PostGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostGroupResponse.Marshal(b, m, deterministic)
}
func (m *PostGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostGroupResponse.Merge(m, src)
}
func (m *PostGroupResponse) XXX_Size() int {
	return xxx_messageInfo_PostGroupResponse.Size(m)
}
func (m *PostGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostGroupResponse proto.InternalMessageInfo

func (m *PostGroupResponse) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type GetGroupRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID               uint64   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupRequest) Reset()         { *m = GetGroupRequest{} }
func (m *GetGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetGroupRequest) ProtoMessage()    {}
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{3}
}

func (m *GetGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupRequest.Unmarshal(m, b)
}
func (m *GetGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupRequest.Marshal(b, m, deterministic)
}
func (m *GetGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupRequest.Merge(m, src)
}
func (m *GetGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetGroupRequest.Size(m)
}
func (m *GetGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupRequest proto.InternalMessageInfo

func (m *GetGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetGroupRequest) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type GetGroupResponse struct {
	Group                *Group   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupResponse) Reset()         { *m = GetGroupResponse{} }
func (m *GetGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetGroupResponse) ProtoMessage()    {}
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{4}
}

func (m *GetGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupResponse.Unmarshal(m, b)
}
func (m *GetGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupResponse.Marshal(b, m, deterministic)
}
func (m *GetGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupResponse.Merge(m, src)
}
func (m *GetGroupResponse) XXX_Size() int {
	return xxx_messageInfo_GetGroupResponse.Size(m)
}
func (m *GetGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupResponse proto.InternalMessageInfo

func (m *GetGroupResponse) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

type GetMultipleGroupsRequest struct {
	Skip                 uint64   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take                 uint64   `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMultipleGroupsRequest) Reset()         { *m = GetMultipleGroupsRequest{} }
func (m *GetMultipleGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMultipleGroupsRequest) ProtoMessage()    {}
func (*GetMultipleGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{5}
}

func (m *GetMultipleGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultipleGroupsRequest.Unmarshal(m, b)
}
func (m *GetMultipleGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultipleGroupsRequest.Marshal(b, m, deterministic)
}
func (m *GetMultipleGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultipleGroupsRequest.Merge(m, src)
}
func (m *GetMultipleGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMultipleGroupsRequest.Size(m)
}
func (m *GetMultipleGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultipleGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultipleGroupsRequest proto.InternalMessageInfo

func (m *GetMultipleGroupsRequest) GetSkip() uint64 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *GetMultipleGroupsRequest) GetTake() uint64 {
	if m != nil {
		return m.Take
	}
	return 0
}

type GetMultipleGroupsResponse struct {
	Groups               []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMultipleGroupsResponse) Reset()         { *m = GetMultipleGroupsResponse{} }
func (m *GetMultipleGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*GetMultipleGroupsResponse) ProtoMessage()    {}
func (*GetMultipleGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{6}
}

func (m *GetMultipleGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultipleGroupsResponse.Unmarshal(m, b)
}
func (m *GetMultipleGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultipleGroupsResponse.Marshal(b, m, deterministic)
}
func (m *GetMultipleGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultipleGroupsResponse.Merge(m, src)
}
func (m *GetMultipleGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_GetMultipleGroupsResponse.Size(m)
}
func (m *GetMultipleGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultipleGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultipleGroupsResponse proto.InternalMessageInfo

func (m *GetMultipleGroupsResponse) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type PutGroupRequest struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	People               []string             `protobuf:"bytes,3,rep,name=people,proto3" json:"people,omitempty"`
	Details              string               `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PutGroupRequest) Reset()         { *m = PutGroupRequest{} }
func (m *PutGroupRequest) String() string { return proto.CompactTextString(m) }
func (*PutGroupRequest) ProtoMessage()    {}
func (*PutGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{7}
}

func (m *PutGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutGroupRequest.Unmarshal(m, b)
}
func (m *PutGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutGroupRequest.Marshal(b, m, deterministic)
}
func (m *PutGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutGroupRequest.Merge(m, src)
}
func (m *PutGroupRequest) XXX_Size() int {
	return xxx_messageInfo_PutGroupRequest.Size(m)
}
func (m *PutGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutGroupRequest proto.InternalMessageInfo

func (m *PutGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutGroupRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PutGroupRequest) GetPeople() []string {
	if m != nil {
		return m.People
	}
	return nil
}

func (m *PutGroupRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *PutGroupRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PutGroupRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PutGroupRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PutGroupResponse struct {
	Group                string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutGroupResponse) Reset()         { *m = PutGroupResponse{} }
func (m *PutGroupResponse) String() string { return proto.CompactTextString(m) }
func (*PutGroupResponse) ProtoMessage()    {}
func (*PutGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{8}
}

func (m *PutGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutGroupResponse.Unmarshal(m, b)
}
func (m *PutGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutGroupResponse.Marshal(b, m, deterministic)
}
func (m *PutGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutGroupResponse.Merge(m, src)
}
func (m *PutGroupResponse) XXX_Size() int {
	return xxx_messageInfo_PutGroupResponse.Size(m)
}
func (m *PutGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutGroupResponse proto.InternalMessageInfo

func (m *PutGroupResponse) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type DeleteGroupRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGroupRequest) Reset()         { *m = DeleteGroupRequest{} }
func (m *DeleteGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGroupRequest) ProtoMessage()    {}
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{9}
}

func (m *DeleteGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGroupRequest.Unmarshal(m, b)
}
func (m *DeleteGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGroupRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGroupRequest.Merge(m, src)
}
func (m *DeleteGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGroupRequest.Size(m)
}
func (m *DeleteGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGroupRequest proto.InternalMessageInfo

func (m *DeleteGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteGroupResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGroupResponse) Reset()         { *m = DeleteGroupResponse{} }
func (m *DeleteGroupResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteGroupResponse) ProtoMessage()    {}
func (*DeleteGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{10}
}

func (m *DeleteGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGroupResponse.Unmarshal(m, b)
}
func (m *DeleteGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGroupResponse.Marshal(b, m, deterministic)
}
func (m *DeleteGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGroupResponse.Merge(m, src)
}
func (m *DeleteGroupResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteGroupResponse.Size(m)
}
func (m *DeleteGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGroupResponse proto.InternalMessageInfo

func (m *DeleteGroupResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Group)(nil), "pb.Group")
	proto.RegisterType((*PostGroupRequest)(nil), "pb.PostGroupRequest")
	proto.RegisterType((*PostGroupResponse)(nil), "pb.PostGroupResponse")
	proto.RegisterType((*GetGroupRequest)(nil), "pb.GetGroupRequest")
	proto.RegisterType((*GetGroupResponse)(nil), "pb.GetGroupResponse")
	proto.RegisterType((*GetMultipleGroupsRequest)(nil), "pb.GetMultipleGroupsRequest")
	proto.RegisterType((*GetMultipleGroupsResponse)(nil), "pb.GetMultipleGroupsResponse")
	proto.RegisterType((*PutGroupRequest)(nil), "pb.PutGroupRequest")
	proto.RegisterType((*PutGroupResponse)(nil), "pb.PutGroupResponse")
	proto.RegisterType((*DeleteGroupRequest)(nil), "pb.DeleteGroupRequest")
	proto.RegisterType((*DeleteGroupResponse)(nil), "pb.DeleteGroupResponse")
}

func init() { proto.RegisterFile("group.proto", fileDescriptor_e10f4c9b19ad8eee) }

var fileDescriptor_e10f4c9b19ad8eee = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x6b, 0xc7, 0x71, 0xc9, 0x18, 0xd1, 0x74, 0x1b, 0xc2, 0x62, 0x81, 0x6a, 0x2c, 0x90,
	0xc2, 0xc5, 0x95, 0xd2, 0x03, 0x82, 0x03, 0x42, 0xa8, 0x52, 0xc4, 0x01, 0xa9, 0x32, 0xbc, 0x40,
	0xd2, 0x0c, 0xd1, 0xaa, 0x6e, 0x77, 0xf1, 0xae, 0x91, 0x78, 0x3b, 0x2e, 0x9c, 0x91, 0x78, 0x22,
	0xe4, 0xf1, 0xba, 0xb1, 0x9d, 0x0f, 0x71, 0xed, 0xcd, 0x33, 0xfb, 0x9f, 0x8f, 0xdf, 0xcc, 0x18,
	0x82, 0x55, 0x2e, 0x0b, 0x95, 0xa8, 0x5c, 0x1a, 0xc9, 0x5c, 0xb5, 0x08, 0x4f, 0x57, 0x52, 0xae,
	0x32, 0x3c, 0x23, 0xcf, 0xa2, 0xf8, 0x76, 0x66, 0xc4, 0x0d, 0x6a, 0x33, 0xbf, 0xb1, 0xa2, 0xf8,
	0xb7, 0x03, 0xfd, 0x59, 0x19, 0xc4, 0x1e, 0x81, 0x2b, 0x96, 0xdc, 0x89, 0x9c, 0xc9, 0x20, 0x75,
	0xc5, 0x92, 0x8d, 0xa0, 0x6f, 0x84, 0xc9, 0x90, 0xbb, 0xe4, 0xaa, 0x0c, 0x36, 0x06, 0x5f, 0xa1,
	0x54, 0x19, 0xf2, 0x5e, 0xd4, 0x9b, 0x0c, 0x52, 0x6b, 0x31, 0x0e, 0x87, 0x4b, 0x34, 0x73, 0x91,
	0x69, 0xee, 0x91, 0xbe, 0x36, 0x19, 0x03, 0xcf, 0xfc, 0x54, 0xc8, 0xfb, 0xe4, 0xa6, 0x6f, 0x16,
	0x41, 0xb0, 0x44, 0x7d, 0x95, 0x0b, 0x65, 0x84, 0xbc, 0xe5, 0x3e, 0x3d, 0x35, 0x5d, 0x2c, 0x01,
	0xaf, 0x6c, 0x95, 0x1f, 0x46, 0xce, 0x24, 0x98, 0x86, 0x49, 0xc5, 0x91, 0xd4, 0x1c, 0xc9, 0xd7,
	0x9a, 0x23, 0x25, 0x5d, 0xfc, 0xcb, 0x81, 0xe1, 0xa5, 0xd4, 0x86, 0x58, 0x52, 0xfc, 0x5e, 0xa0,
	0x36, 0x6b, 0x04, 0x67, 0x3b, 0x82, 0xbb, 0x0b, 0xa1, 0xb7, 0x1d, 0xc1, 0xdb, 0x8d, 0xd0, 0xdf,
	0x8d, 0xe0, 0xff, 0x27, 0xc2, 0x6b, 0x38, 0x6e, 0x10, 0x68, 0x25, 0x6f, 0x35, 0x96, 0x08, 0xb4,
	0xd3, 0x1a, 0x81, 0x8c, 0xf8, 0x2d, 0x1c, 0xcd, 0xb0, 0xcd, 0xda, 0x5d, 0xdf, 0x18, 0xfc, 0x42,
	0x63, 0xfe, 0xe9, 0x82, 0xf6, 0xe7, 0xa5, 0xd6, 0x8a, 0xcf, 0x61, 0xb8, 0x0e, 0xb5, 0x45, 0x4e,
	0x9b, 0x45, 0x82, 0xe9, 0x20, 0x51, 0x8b, 0xa4, 0x52, 0xd8, 0x7a, 0x1f, 0x81, 0xcf, 0xd0, 0x7c,
	0x2e, 0x32, 0x23, 0x54, 0x86, 0xf4, 0xa4, 0xeb, 0xc2, 0x0c, 0x3c, 0x7d, 0x2d, 0xaa, 0x58, 0x2f,
	0xa5, 0x6f, 0x1a, 0xd8, 0xfc, 0x1a, 0x6d, 0x69, 0xfa, 0x8e, 0xdf, 0xc3, 0xd3, 0x2d, 0x39, 0x6c,
	0x07, 0x2f, 0xc0, 0xa7, 0x4a, 0x9a, 0x3b, 0x51, 0xaf, 0xdd, 0x82, 0x7d, 0x88, 0xff, 0x38, 0x70,
	0x74, 0x59, 0xec, 0x87, 0xbe, 0x5f, 0x37, 0x3b, 0x81, 0xe1, 0x1a, 0x68, 0xef, 0xbe, 0x5f, 0x02,
	0xbb, 0xc0, 0x0c, 0x0d, 0xee, 0xa3, 0x8f, 0x5f, 0xc1, 0x49, 0x4b, 0x65, 0x53, 0x76, 0x64, 0xd3,
	0xbf, 0x2e, 0x3c, 0x24, 0xc5, 0x17, 0xcc, 0x7f, 0x88, 0x2b, 0x64, 0xef, 0x60, 0x70, 0x77, 0x78,
	0x6c, 0x54, 0x4e, 0xbe, 0xfb, 0x27, 0x85, 0x8f, 0x3b, 0xde, 0x2a, 0x75, 0x7c, 0xc0, 0xde, 0xc0,
	0x83, 0xfa, 0x9c, 0xd8, 0x09, 0x2d, 0xad, 0x7d, 0x97, 0xe1, 0xa8, 0xed, 0xbc, 0x0b, 0x4c, 0xe1,
	0x78, 0xe3, 0x1c, 0xd8, 0x33, 0x2b, 0xde, 0x7a, 0x69, 0xe1, 0xf3, 0x1d, 0xaf, 0xcd, 0x66, 0xea,
	0x81, 0x56, 0xcd, 0x74, 0xee, 0xa5, 0x6a, 0xa6, 0x3b, 0xf3, 0xf8, 0x80, 0x7d, 0x80, 0xa0, 0x31,
	0x39, 0x36, 0x2e, 0x65, 0x9b, 0x03, 0x0f, 0x9f, 0x6c, 0xf8, 0xeb, 0x0c, 0x0b, 0x9f, 0xb6, 0x7c,
	0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xe9, 0xfc, 0xe9, 0x82, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GroupServiceClient is the client API for GroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupServiceClient interface {
	PostGroup(ctx context.Context, in *PostGroupRequest, opts ...grpc.CallOption) (*PostGroupResponse, error)
	GetGroup(ctx context.Context, in *GetGroupRequest, opts ...grpc.CallOption) (*GetGroupResponse, error)
	GetMultipleGroups(ctx context.Context, in *GetMultipleGroupsRequest, opts ...grpc.CallOption) (*GetMultipleGroupsResponse, error)
	PutGroup(ctx context.Context, in *PutGroupRequest, opts ...grpc.CallOption) (*PutGroupResponse, error)
	DeleteGroup(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*DeleteGroupResponse, error)
}

type groupServiceClient struct {
	cc *grpc.ClientConn
}

func NewGroupServiceClient(cc *grpc.ClientConn) GroupServiceClient {
	return &groupServiceClient{cc}
}

func (c *groupServiceClient) PostGroup(ctx context.Context, in *PostGroupRequest, opts ...grpc.CallOption) (*PostGroupResponse, error) {
	out := new(PostGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.GroupService/PostGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) GetGroup(ctx context.Context, in *GetGroupRequest, opts ...grpc.CallOption) (*GetGroupResponse, error) {
	out := new(GetGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.GroupService/GetGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) GetMultipleGroups(ctx context.Context, in *GetMultipleGroupsRequest, opts ...grpc.CallOption) (*GetMultipleGroupsResponse, error) {
	out := new(GetMultipleGroupsResponse)
	err := c.cc.Invoke(ctx, "/pb.GroupService/GetMultipleGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) PutGroup(ctx context.Context, in *PutGroupRequest, opts ...grpc.CallOption) (*PutGroupResponse, error) {
	out := new(PutGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.GroupService/PutGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) DeleteGroup(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*DeleteGroupResponse, error) {
	out := new(DeleteGroupResponse)
	err := c.cc.Invoke(ctx, "/pb.GroupService/DeleteGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupServiceServer is the server API for GroupService service.
type GroupServiceServer interface {
	PostGroup(context.Context, *PostGroupRequest) (*PostGroupResponse, error)
	GetGroup(context.Context, *GetGroupRequest) (*GetGroupResponse, error)
	GetMultipleGroups(context.Context, *GetMultipleGroupsRequest) (*GetMultipleGroupsResponse, error)
	PutGroup(context.Context, *PutGroupRequest) (*PutGroupResponse, error)
	DeleteGroup(context.Context, *DeleteGroupRequest) (*DeleteGroupResponse, error)
}

// UnimplementedGroupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGroupServiceServer struct {
}

func (*UnimplementedGroupServiceServer) PostGroup(ctx context.Context, req *PostGroupRequest) (*PostGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGroup not implemented")
}
func (*UnimplementedGroupServiceServer) GetGroup(ctx context.Context, req *GetGroupRequest) (*GetGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroup not implemented")
}
func (*UnimplementedGroupServiceServer) GetMultipleGroups(ctx context.Context, req *GetMultipleGroupsRequest) (*GetMultipleGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipleGroups not implemented")
}
func (*UnimplementedGroupServiceServer) PutGroup(ctx context.Context, req *PutGroupRequest) (*PutGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutGroup not implemented")
}
func (*UnimplementedGroupServiceServer) DeleteGroup(ctx context.Context, req *DeleteGroupRequest) (*DeleteGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGroup not implemented")
}

func RegisterGroupServiceServer(s *grpc.Server, srv GroupServiceServer) {
	s.RegisterService(&_GroupService_serviceDesc, srv)
}

func _GroupService_PostGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).PostGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GroupService/PostGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).PostGroup(ctx, req.(*PostGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GroupService/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).GetGroup(ctx, req.(*GetGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_GetMultipleGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultipleGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).GetMultipleGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GroupService/GetMultipleGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).GetMultipleGroups(ctx, req.(*GetMultipleGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_PutGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).PutGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GroupService/PutGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).PutGroup(ctx, req.(*PutGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GroupService/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).DeleteGroup(ctx, req.(*DeleteGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GroupService",
	HandlerType: (*GroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostGroup",
			Handler:    _GroupService_PostGroup_Handler,
		},
		{
			MethodName: "GetGroup",
			Handler:    _GroupService_GetGroup_Handler,
		},
		{
			MethodName: "GetMultipleGroups",
			Handler:    _GroupService_GetMultipleGroups_Handler,
		},
		{
			MethodName: "PutGroup",
			Handler:    _GroupService_PutGroup_Handler,
		},
		{
			MethodName: "DeleteGroup",
			Handler:    _GroupService_DeleteGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "group.proto",
}
