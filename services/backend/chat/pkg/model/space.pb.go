// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

// Copyright 2019 kemar
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto // Copyright 2019 kemar
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto // Copyright 2019 kemar
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto // Copyright 2019 kemar
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package

type Chat struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator              string               `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Managers             []string             `protobuf:"bytes,3,rep,name=managers,proto3" json:"managers,omitempty"`
	Topic                string               `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Details              string               `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Tags                 []string             `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Followers            []string             `protobuf:"bytes,9,rep,name=followers,proto3" json:"followers,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Chat) Reset()         { *m = Chat{} }
func (m *Chat) String() string { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()    {}
func (*Chat) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{0}
}
func (m *Chat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chat.Unmarshal(m, b)
}
func (m *Chat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chat.Marshal(b, m, deterministic)
}
func (dst *Chat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chat.Merge(dst, src)
}
func (m *Chat) XXX_Size() int {
	return xxx_messageInfo_Chat.Size(m)
}
func (m *Chat) XXX_DiscardUnknown() {
	xxx_messageInfo_Chat.DiscardUnknown(m)
}

var xxx_messageInfo_Chat proto.InternalMessageInfo

func (m *Chat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Chat) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Chat) GetManagers() []string {
	if m != nil {
		return m.Managers
	}
	return nil
}

func (m *Chat) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Chat) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Chat) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Chat) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Chat) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Chat) GetFollowers() []string {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *Chat) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PostRequest struct {
	Creator              string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Managers             []string             `protobuf:"bytes,2,rep,name=managers,proto3" json:"managers,omitempty"`
	Topic                string               `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Details              string               `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string               `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Description          string               `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Tags                 []string             `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Followers            []string             `protobuf:"bytes,8,rep,name=followers,proto3" json:"followers,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,9,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{1}
}
func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (dst *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(dst, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *PostRequest) GetManagers() []string {
	if m != nil {
		return m.Managers
	}
	return nil
}

func (m *PostRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PostRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *PostRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PostRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PostRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PostRequest) GetFollowers() []string {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *PostRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PostResponse struct {
	Chat                string   `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostResponse) Reset()         { *m = PostResponse{} }
func (m *PostResponse) String() string { return proto.CompactTextString(m) }
func (*PostResponse) ProtoMessage()    {}
func (*PostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{2}
}
func (m *PostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostResponse.Unmarshal(m, b)
}
func (m *PostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostResponse.Marshal(b, m, deterministic)
}
func (dst *PostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostResponse.Merge(dst, src)
}
func (m *PostResponse) XXX_Size() int {
	return xxx_messageInfo_PostResponse.Size(m)
}
func (m *PostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostResponse proto.InternalMessageInfo

func (m *PostResponse) GetChat() string {
	if m != nil {
		return m.Chat
	}
	return ""
}

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID               uint64   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{3}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRequest) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type GetResponse struct {
	Chat                *Chat   `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{4}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetChat() *Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

type GetMultipleRequest struct {
	Skip                 uint64   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take                 uint64   `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMultipleRequest) Reset()         { *m = GetMultipleRequest{} }
func (m *GetMultipleRequest) String() string { return proto.CompactTextString(m) }
func (*GetMultipleRequest) ProtoMessage()    {}
func (*GetMultipleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{5}
}
func (m *GetMultipleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultipleRequest.Unmarshal(m, b)
}
func (m *GetMultipleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultipleRequest.Marshal(b, m, deterministic)
}
func (dst *GetMultipleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultipleRequest.Merge(dst, src)
}
func (m *GetMultipleRequest) XXX_Size() int {
	return xxx_messageInfo_GetMultipleRequest.Size(m)
}
func (m *GetMultipleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultipleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultipleRequest proto.InternalMessageInfo

func (m *GetMultipleRequest) GetSkip() uint64 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *GetMultipleRequest) GetTake() uint64 {
	if m != nil {
		return m.Take
	}
	return 0
}

type GetMultipleResponse struct {
	Chats               []*Chat `protobuf:"bytes,1,rep,name=chats,proto3" json:"chats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMultipleResponse) Reset()         { *m = GetMultipleResponse{} }
func (m *GetMultipleResponse) String() string { return proto.CompactTextString(m) }
func (*GetMultipleResponse) ProtoMessage()    {}
func (*GetMultipleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{6}
}
func (m *GetMultipleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultipleResponse.Unmarshal(m, b)
}
func (m *GetMultipleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultipleResponse.Marshal(b, m, deterministic)
}
func (dst *GetMultipleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultipleResponse.Merge(dst, src)
}
func (m *GetMultipleResponse) XXX_Size() int {
	return xxx_messageInfo_GetMultipleResponse.Size(m)
}
func (m *GetMultipleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultipleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultipleResponse proto.InternalMessageInfo

func (m *GetMultipleResponse) GetChats() []*Chat {
	if m != nil {
		return m.Chats
	}
	return nil
}

type PutRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator              string   `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Managers             []string `protobuf:"bytes,3,rep,name=managers,proto3" json:"managers,omitempty"`
	Topic                string   `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Details              string   `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Tags                 []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Followers            []string `protobuf:"bytes,9,rep,name=followers,proto3" json:"followers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{7}
}
func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (dst *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(dst, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *PutRequest) GetManagers() []string {
	if m != nil {
		return m.Managers
	}
	return nil
}

func (m *PutRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PutRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *PutRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PutRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PutRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PutRequest) GetFollowers() []string {
	if m != nil {
		return m.Followers
	}
	return nil
}

type PutResponse struct {
	Chat                string   `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{8}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (dst *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(dst, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (m *PutResponse) GetChat() string {
	if m != nil {
		return m.Chat
	}
	return ""
}

type DeleteRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{9}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_1c10ef5373b8a09f, []int{10}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(dst, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Chat)(nil), "pb.Chat")
	proto.RegisterType((*PostRequest)(nil), "pb.PostRequest")
	proto.RegisterType((*PostResponse)(nil), "pb.PostResponse")
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "pb.GetResponse")
	proto.RegisterType((*GetMultipleRequest)(nil), "pb.GetMultipleRequest")
	proto.RegisterType((*GetMultipleResponse)(nil), "pb.GetMultipleResponse")
	proto.RegisterType((*PutRequest)(nil), "pb.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "pb.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "pb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "pb.DeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc // Copyright 2019 kemar
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	Post(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetMultiple(ctx context.Context, in *GetMultipleRequest, opts ...grpc.CallOption) (*GetMultipleResponse, error)
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) Post(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostResponse, error) {
	out := new(PostResponse)
	err := c.cc.Invoke(ctx, "/pb.ChatService/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/pb.ChatService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GetMultiple(ctx context.Context, in *GetMultipleRequest, opts ...grpc.CallOption) (*GetMultipleResponse, error) {
	out := new(GetMultipleResponse)
	err := c.cc.Invoke(ctx, "/pb.ChatService/GetMultiple", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/pb.ChatService/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/pb.ChatService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	Post(context.Context, *PostRequest) (*PostResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	GetMultiple(context.Context, *GetMultipleRequest) (*GetMultipleResponse, error)
	Put(context.Context, *PutRequest) (*PutResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChatService/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Post(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChatService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GetMultiple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultipleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GetMultiple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChatService/GetMultiple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GetMultiple(ctx, req.(*GetMultipleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChatService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ChatService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Post",
			Handler:    _ChatService_Post_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ChatService_Get_Handler,
		},
		{
			MethodName: "GetMultiple",
			Handler:    _ChatService_GetMultiple_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _ChatService_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ChatService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_1c10ef5373b8a09f) }

var fileDescriptor_chat_1c10ef5373b8a09f = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x93, 0xb1, 0x8e, 0xd3, 0x40,
	0x10, 0x86, 0xcf, 0x8e, 0xe3, 0xc4, 0xe3, 0x23, 0x07, 0x0b, 0x3a, 0x56, 0x16, 0x52, 0x8c, 0xa1,
	0x88, 0x84, 0xe4, 0x13, 0x81, 0x82, 0x82, 0x82, 0xe2, 0xa4, 0x88, 0x02, 0x29, 0xf2, 0xf1, 0x02,
	0x8e, 0x33, 0x17, 0x59, 0xe7, 0x64, 0x17, 0xef, 0x1a, 0x44, 0x4f, 0x47, 0xcd, 0x4b, 0xf2, 0x14,
	0xc8, 0xe3, 0x75, 0xe2, 0x04, 0x8c, 0xa8, 0xe9, 0x76, 0x66, 0x67, 0xe6, 0xf7, 0x7c, 0xfe, 0x17,
	0x7c, 0x25, 0xd3, 0x0c, 0x63, 0x59, 0x0a, 0x2d, 0x98, 0x2d, 0x57, 0xc1, 0x74, 0x23, 0xc4, 0xa6,
	0xc0, 0x2b, 0xca, 0xac, 0xaa, 0xdb, 0x2b, 0x9d, 0x6f, 0x51, 0xe9, 0x74, 0x2b, 0x9b, 0xa2, 0xe8,
	0x87, 0x0d, 0xc3, 0x9b, 0xba, 0x89, 0x4d, 0xc0, 0xce, 0xd7, 0xdc, 0x0a, 0xad, 0x99, 0x97, 0xd8,
	0xf9, 0x9a, 0x71, 0x18, 0x65, 0x25, 0xa6, 0x5a, 0x94, 0xdc, 0xa6, 0x64, 0x1b, 0xb2, 0x00, 0xc6,
	0xdb, 0x74, 0x97, 0x6e, 0xb0, 0x54, 0x7c, 0x10, 0x0e, 0x66, 0x5e, 0xb2, 0x8f, 0xd9, 0x23, 0x18,
	0x6a, 0x21, 0xf3, 0x8c, 0x3b, 0xd4, 0xd3, 0x04, 0xf5, 0xac, 0x35, 0xea, 0x34, 0x2f, 0x14, 0x1f,
	0x36, 0xb3, 0x4c, 0xc8, 0x18, 0x38, 0xfa, 0xab, 0x44, 0xee, 0x52, 0x9a, 0xce, 0x2c, 0x04, 0x7f,
	0x8d, 0x2a, 0x2b, 0x73, 0xa9, 0x73, 0xb1, 0xe3, 0x23, 0xba, 0xea, 0xa6, 0xa8, 0x2b, 0xdd, 0x28,
	0x3e, 0x26, 0x75, 0x3a, 0xb3, 0x27, 0xe0, 0xdd, 0x8a, 0xa2, 0x10, 0x5f, 0xea, 0xcf, 0xf2, 0xe8,
	0xe2, 0x90, 0x60, 0x31, 0x38, 0xf5, 0xea, 0x1c, 0x42, 0x6b, 0xe6, 0xcf, 0x83, 0xb8, 0xe1, 0x12,
	0xb7, 0x5c, 0xe2, 0x8f, 0x2d, 0x97, 0x84, 0xea, 0xa2, 0xef, 0x36, 0xf8, 0x4b, 0xa1, 0x74, 0x82,
	0x9f, 0x2a, 0x54, 0xba, 0x4b, 0xc3, 0xea, 0xa7, 0x61, 0xf7, 0xd1, 0x18, 0xf4, 0xd0, 0x70, 0xfe,
	0x4c, 0x63, 0xd8, 0x4f, 0xc3, 0xed, 0xa7, 0x31, 0xea, 0xa3, 0x31, 0xee, 0xa3, 0xe1, 0xfd, 0x23,
	0x8d, 0xe7, 0x70, 0xde, 0xc0, 0x50, 0x52, 0xec, 0x14, 0xd6, 0x7b, 0x91, 0xd3, 0x0c, 0x8b, 0x26,
	0x88, 0x5e, 0x03, 0x2c, 0x70, 0x4f, 0xec, 0xd4, 0x4f, 0x97, 0xe0, 0x56, 0x0a, 0xcb, 0xf7, 0xd7,
	0x64, 0x27, 0x27, 0x31, 0x51, 0x14, 0x83, 0x4f, 0x5d, 0x66, 0xf4, 0xb4, 0x3b, 0xda, 0x9f, 0x7b,
	0xb1, 0x5c, 0xc5, 0x64, 0xd0, 0x56, 0xe5, 0x2d, 0xb0, 0x05, 0xea, 0x0f, 0x55, 0xa1, 0x73, 0x59,
	0x60, 0xab, 0xc6, 0xc0, 0x51, 0x77, 0xb9, 0xa4, 0x2e, 0x27, 0xa1, 0x73, 0xc3, 0xe5, 0x0e, 0x8d,
	0x1e, 0x9d, 0xa3, 0x37, 0xf0, 0xf0, 0xa8, 0xdb, 0xa8, 0x3e, 0x05, 0x97, 0xa6, 0x2b, 0x6e, 0x85,
	0x83, 0x63, 0x59, 0x73, 0x11, 0xfd, 0xb4, 0x00, 0x96, 0x55, 0xef, 0x7a, 0xff, 0xd5, 0x73, 0x89,
	0x9e, 0x81, 0x4f, 0xbb, 0xfe, 0xf5, 0x7f, 0x4f, 0xe1, 0xde, 0x35, 0x16, 0xa8, 0xb1, 0x87, 0x49,
	0x14, 0xc2, 0xa4, 0x2d, 0x30, 0x83, 0x4e, 0x2a, 0xe6, 0xdf, 0x6c, 0x38, 0x27, 0xcc, 0x37, 0x58,
	0x7e, 0xce, 0x33, 0x64, 0x2f, 0xc0, 0xa9, 0x9d, 0xc6, 0x2e, 0xea, 0x1f, 0xd0, 0x79, 0x80, 0xc1,
	0xfd, 0x43, 0xa2, 0x99, 0x15, 0x9d, 0xb1, 0x19, 0x0c, 0x16, 0xa8, 0xd9, 0xa4, 0xbe, 0x3a, 0x38,
	0x2f, 0xb8, 0xd8, 0xc7, 0xfb, 0xca, 0x77, 0x64, 0xb2, 0xf6, 0xb7, 0xb3, 0x4b, 0x53, 0x71, 0xe2,
	0xa2, 0xe0, 0xf1, 0x6f, 0xf9, 0xae, 0xd6, 0xb2, 0x32, 0x5a, 0x07, 0x1b, 0x34, 0x5a, 0x1d, 0x54,
	0xd1, 0x19, 0x7b, 0x09, 0x6e, 0xb3, 0x35, 0x7b, 0x50, 0x5f, 0x1e, 0x21, 0x0a, 0x58, 0x37, 0xd5,
	0xb6, 0xac, 0x5c, 0x7a, 0x79, 0xaf, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xbe, 0x06, 0x41,
	0xc0, 0x05, 0x00, 0x00,
}
