// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Notification struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Topic                string   `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{0}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Notification) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Notification) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type SendNotificationRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendNotificationRequest) Reset()         { *m = SendNotificationRequest{} }
func (m *SendNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*SendNotificationRequest) ProtoMessage()    {}
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{1}
}

func (m *SendNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendNotificationRequest.Unmarshal(m, b)
}
func (m *SendNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendNotificationRequest.Marshal(b, m, deterministic)
}
func (m *SendNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendNotificationRequest.Merge(m, src)
}
func (m *SendNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_SendNotificationRequest.Size(m)
}
func (m *SendNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendNotificationRequest proto.InternalMessageInfo

func (m *SendNotificationRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *SendNotificationRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SendNotificationRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type SendNotificationResponse struct {
	Notification         *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SendNotificationResponse) Reset()         { *m = SendNotificationResponse{} }
func (m *SendNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*SendNotificationResponse) ProtoMessage()    {}
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{2}
}

func (m *SendNotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendNotificationResponse.Unmarshal(m, b)
}
func (m *SendNotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendNotificationResponse.Marshal(b, m, deterministic)
}
func (m *SendNotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendNotificationResponse.Merge(m, src)
}
func (m *SendNotificationResponse) XXX_Size() int {
	return xxx_messageInfo_SendNotificationResponse.Size(m)
}
func (m *SendNotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendNotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendNotificationResponse proto.InternalMessageInfo

func (m *SendNotificationResponse) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func init() {
	proto.RegisterType((*Notification)(nil), "pb.Notification")
	proto.RegisterType((*SendNotificationRequest)(nil), "pb.SendNotificationRequest")
	proto.RegisterType((*SendNotificationResponse)(nil), "pb.SendNotificationResponse")
}

func init() { proto.RegisterFile("notification.proto", fileDescriptor_736a457d4a5efa07) }

var fileDescriptor_736a457d4a5efa07 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0xcb, 0x2f, 0xc9,
	0x4c, 0xcb, 0x4c, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2a, 0x48, 0x52, 0x4a, 0xe2, 0xe2, 0xf1, 0x43, 0x92, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c, 0x11, 0x92, 0xe0, 0x62, 0x2f, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0x95, 0x60, 0x02, 0x0b, 0xc2, 0xb8, 0x42, 0x22, 0x5c, 0xac, 0x25, 0xf9,
	0x05, 0x99, 0xc9, 0x12, 0xcc, 0x60, 0x71, 0x08, 0x47, 0x48, 0x88, 0x8b, 0x25, 0x29, 0x3f, 0xa5,
	0x52, 0x82, 0x05, 0x2c, 0x08, 0x66, 0x2b, 0xc5, 0x72, 0x89, 0x07, 0xa7, 0xe6, 0xa5, 0x20, 0xdb,
	0x13, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x82, 0x6c, 0x3c, 0x23, 0x0e, 0xe3, 0x99, 0xb0, 0x19,
	0xcf, 0x8c, 0x64, 0x7c, 0x00, 0x97, 0x04, 0xa6, 0xf1, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42,
	0x26, 0x5c, 0x3c, 0xc8, 0x1e, 0x07, 0x5b, 0xc2, 0x6d, 0x24, 0xa0, 0x57, 0x90, 0xa4, 0x87, 0xa2,
	0x1e, 0x45, 0x95, 0x51, 0x1a, 0x97, 0x30, 0xb2, 0x6c, 0x30, 0xd4, 0x49, 0xfe, 0x5c, 0x02, 0xe8,
	0x16, 0x09, 0x49, 0x83, 0x8c, 0xc2, 0xe1, 0x3b, 0x29, 0x19, 0xec, 0x92, 0x10, 0xb7, 0x29, 0x31,
	0x24, 0xb1, 0x81, 0xe3, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x1b, 0x9d, 0x82, 0x9d,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	SendNotification(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*SendNotificationResponse, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) SendNotification(ctx context.Context, in *SendNotificationRequest, opts ...grpc.CallOption) (*SendNotificationResponse, error) {
	out := new(SendNotificationResponse)
	err := c.cc.Invoke(ctx, "/pb.NotificationService/SendNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	SendNotification(context.Context, *SendNotificationRequest) (*SendNotificationResponse, error)
}

// UnimplementedNotificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationServiceServer struct {
}

func (*UnimplementedNotificationServiceServer) SendNotification(ctx context.Context, req *SendNotificationRequest) (*SendNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNotification not implemented")
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_SendNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).SendNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.NotificationService/SendNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).SendNotification(ctx, req.(*SendNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendNotification",
			Handler:    _NotificationService_SendNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notification.proto",
}
